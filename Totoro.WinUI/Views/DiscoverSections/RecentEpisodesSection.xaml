<discoversections:RecentEpisodesSectionBase
    x:Class="Totoro.WinUI.Views.DiscoverSections.RecentEpisodesSection"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctk="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:discoversections="using:Totoro.WinUI.Views.DiscoverSections"
    xmlns:help="using:Totoro.WinUI.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pc="using:Totoro.Plugins.Anime.Contracts"
    xmlns:uc="using:Totoro.WinUI.UserControls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel
            Margin="{StaticResource SmallTopBottomMargin}"
            HorizontalAlignment="Center"
            Spacing="5">

            <StackPanel Orientation="Horizontal" Spacing="10">
                <AutoSuggestBox
                    Width="300"
                    Height="35"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    PlaceholderText="Search"
                    QueryIcon="Find"
                    Text="{x:Bind ViewModel.FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ComboBox
                    VerticalAlignment="Center"
                    DisplayMemberPath="DisplayName"
                    ItemsSource="{x:Bind ViewModel.Plugins}"
                    SelectedItem="{x:Bind ViewModel.SelectedProvider, Mode=TwoWay}" />
                <Button Command="{x:Bind ViewModel.LoadMore}" Content="Load More" />
            </StackPanel>

        </StackPanel>

        <ctk:SwitchPresenter
            Grid.Row="2"
            TargetType="x:Boolean"
            Value="{x:Bind ViewModel.IsEpisodesLoading, Mode=OneWay}">
            <ctk:Case Value="True">
                <Grid>
                    <ProgressRing IsActive="True" />
                </Grid>
            </ctk:Case>
            <ctk:Case Value="False">
                <Grid>
                    <ItemsView
                        x:Name="EpisodeView"
                        IsItemInvokedEnabled="True"
                        SelectionMode="None"
                        ItemsSource="{x:Bind ViewModel.Episodes, Mode=OneWay}">
                        <ItemsView.ItemTemplate>
                            <DataTemplate x:DataType="pc:IAiredAnimeEpisode">
                                <ItemContainer Height="320">
                                    <ItemContainer.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                Click="WatchExternalClicked"
                                                Icon="{ui:FontIcon Glyph=&#xEC15;}"
                                                Tag="{x:Bind}"
                                                Text="WatchExternal" />
                                        </MenuFlyout>
                                    </ItemContainer.ContextFlyout>
                                    <Grid x:Name="MainGrid" CornerRadius="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <ctk:SwitchPresenter
                                            Grid.Row="0"
                                            TargetType="x:Boolean"
                                            Value="{Binding ElementName=Page, Path=ViewModel.DontUseImageEx, Mode=OneWay}">
                                            <ctk:Case IsDefault="True" Value="False">
                                                <uc:ImageEx
                                                    CacheMode="BitmapCache"
                                                    EnableLazyLoading="True"
                                                    IsCacheEnabled="True"
                                                    PlaceholderSource="/Assets/placeholder.jpg"
                                                    PlaceholderStretch="Fill"
                                                    Source="{x:Bind Image}"
                                                    Stretch="UniformToFill" />
                                            </ctk:Case>
                                            <ctk:Case Value="True">
                                                <Image
                                                    Grid.Row="0"
                                                    Source="{x:Bind Image}"
                                                    Stretch="UniformToFill" />
                                            </ctk:Case>
                                        </ctk:SwitchPresenter>

                                        <Grid
                                            x:Name="Time"
                                            Grid.Row="0"
                                            Height="30"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top">
                                            <Grid.Background>
                                                <SolidColorBrush Opacity="0.5" Color="Black" />
                                            </Grid.Background>
                                            <TextBlock
                                                FontSize="20"
                                                Foreground="White"
                                                Text="{x:Bind help:ModelHelpers.GetTimeOfAiring((pc:IAiredAnimeEpisode))}"
                                                Visibility="{x:Bind help:ModelHelpers.GetTimeOfAiringVisibility((pc:IAiredAnimeEpisode))}" />
                                        </Grid>

                                        <Border
                                            x:Name="Border"
                                            Grid.Row="1"
                                            Height="60"
                                            Padding="3"
                                            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                                            <StackPanel>
                                                <TextBlock
                                                    Margin="0,3,0,0"
                                                    Padding="3"
                                                    VerticalAlignment="Center"
                                                    FontSize="15"
                                                    Text="{x:Bind Title}"
                                                    TextAlignment="Center"
                                                    TextTrimming="WordEllipsis"
                                                    TextWrapping="NoWrap"
                                                    ToolTipService.ToolTip="{x:Bind Title}" />
                                                <TextBlock HorizontalAlignment="Center">
                                                    <Run Text="Episode" />
                                                    <Run Text="{x:Bind Episode}" />
                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </ItemContainer>
                            </DataTemplate>
                        </ItemsView.ItemTemplate>
                        <ItemsView.Layout>
                            <UniformGridLayout
                                ItemsStretch="Fill"
                                MinColumnSpacing="5"
                                MinItemWidth="{x:Bind ViewModel.CardWidth, Mode=OneWay}"
                                MinRowSpacing="5" />
                        </ItemsView.Layout>
                        <ItemsView.ItemTransitionProvider>
                            <LinedFlowLayoutItemCollectionTransitionProvider />
                        </ItemsView.ItemTransitionProvider>
                    </ItemsView>
                </Grid>
            </ctk:Case>
        </ctk:SwitchPresenter>

    </Grid>
</discoversections:RecentEpisodesSectionBase>
