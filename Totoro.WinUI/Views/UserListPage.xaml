<v:UserListPageBase
    x:Class="Totoro.WinUI.Views.UserListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:animations="using:CommunityToolkit.WinUI.UI.Animations"
    xmlns:b="using:Totoro.WinUI.Behaviors"
    xmlns:cm="using:Totoro.Core.Models"
    xmlns:ctk="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:help="using:Totoro.Core.Helpers"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:primitives="using:CommunityToolkit.WinUI.UI.Controls.Primitives"
    xmlns:root="using:Totoro.WinUI"
    xmlns:uc="using:Totoro.WinUI.UserControls"
    xmlns:uhelp="using:Totoro.WinUI.Helpers"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:v="using:Totoro.WinUI.Views"
    xmlns:viewmodels="using:Totoro.Core.ViewModels"
    Name="Page"
    Margin="{StaticResource MediumLeftRightMargin}"
    d:DataContext="{d:DesignInstance Type=viewmodels:UserListViewModel}"
    mc:Ignorable="d">
    <v:UserListPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/RadioButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <v:HumanizeConverter x:Key="HumanizeConverter" />
            <v:AiringStatusToBrushConverter x:Key="StatusConverter" />
            <v:ScoreConverter x:Key="ScoreConverter" />
        </ResourceDictionary>
    </v:UserListPageBase.Resources>

    <ctk:SwitchPresenter Value="{x:Bind ViewModel.IsAuthenticated}">
        <ctk:Case>
            <ctk:Case.Value>
                <x:Boolean>True</x:Boolean>
            </ctk:Case.Value>
            <Grid x:Name="ContentArea" Margin="0,25,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Margin="0,0,0,12" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <labs:Segmented
                        Margin="{StaticResource SmallTopBottomMargin}"
                        ItemsSource="{x:Bind Statuses}"
                        SelectedItem="{x:Bind ViewModel.Filter.ListStatus, Mode=TwoWay}">
                        <labs:Segmented.ItemTemplate>
                            <DataTemplate x:DataType="cm:AnimeStatus">
                                <TextBlock Text="{x:Bind v:UserListPage.ToStatusString((cm:AnimeStatus))}" />
                            </DataTemplate>
                        </labs:Segmented.ItemTemplate>
                        <labs:Segmented.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ctk:WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </labs:Segmented.ItemsPanel>
                        <labs:Segmented.ItemContainerStyle>
                            <Style TargetType="labs:SegmentedItem">
                                <Setter Property="MinWidth" Value="200" />
                                <Setter Property="FontSize" Value="{StaticResource SubtitleTextBlockFontSize}" />
                            </Style>
                        </labs:Segmented.ItemContainerStyle>
                    </labs:Segmented>
                </Grid>

                <ctk:SwitchPresenter Grid.Row="1" Value="{x:Bind ViewModel.Mode, Mode=OneWay}">
                    <ctk:Case Value="{x:Bind cm:DisplayMode.Grid}">
                        <ctk:AdaptiveGridView
                            x:Name="AnimeListView"
                            animations:ItemsReorderAnimation.Duration="00:00:00.4000000"
                            ui:ListViewExtensions.Command="{x:Bind root:App.Commands.AnimeCard}"
                            DesiredWidth="240"
                            IsItemClickEnabled="True"
                            ItemHeight="380"
                            ItemsSource="{x:Bind ViewModel.Anime}"
                            StretchContentForSingleRow="False">
                            <ctk:AdaptiveGridView.ItemTemplate>
                                <DataTemplate x:DataType="cm:AnimeModel">
                                    <uc:AnimeCard
                                        x:Name="Card"
                                        Margin="3"
                                        Anime="{x:Bind}" />
                                </DataTemplate>
                            </ctk:AdaptiveGridView.ItemTemplate>
                        </ctk:AdaptiveGridView>
                    </ctk:Case>
                    <ctk:Case Value="{x:Bind cm:DisplayMode.List}">
                        <ctk:DataGrid
                            x:Name="ListDataGrid"
                            AlternatingRowBackground="{ThemeResource SubtleFillColorTransparentBrush}"
                            AreRowDetailsFrozen="True"
                            AutoGenerateColumns="False"
                            CanUserReorderColumns="True"
                            CanUserResizeColumns="True"
                            CanUserSortColumns="True"
                            GridLinesVisibility="Vertical"
                            HeadersVisibility="All"
                            ItemsSource="{x:Bind ViewModel.Anime}"
                            LoadingRow="OnLoadingRow"
                            RowBackground="{ThemeResource SubtleFillColorSecondaryBrush}"
                            RowDetailsVisibilityMode="VisibleWhenSelected"
                            RowHeaderWidth="5"
                            SelectionMode="Single">
                            <Interactivity:Interaction.Behaviors>
                                <b:DataGridPersistenceBehavior Settings="{x:Bind ViewModel.DataGridSettings, Mode=OneWay}" />
                            </Interactivity:Interaction.Behaviors>
                            <ctk:DataGrid.RowHeaderStyle>
                                <Style TargetType="primitives:DataGridRowHeader">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="primitives:DataGridRowHeader">
                                                <Grid Background="{Binding AiringStatus, Converter={StaticResource StatusConverter}}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ctk:DataGrid.RowHeaderStyle>
                            <ctk:DataGrid.RowDetailsTemplate>
                                <DataTemplate x:DataType="cm:AnimeModel">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ctk:ImageEx
                                            Width="160"
                                            Margin="10"
                                            CornerRadius="10"
                                            PlaceholderSource="/Assets/placeholder.jpg"
                                            PlaceholderStretch="Fill"
                                            Source="{x:Bind Image}"
                                            Stretch="UniformToFill" />
                                        <StackPanel
                                            Grid.Column="1"
                                            Padding="10"
                                            Spacing="10">
                                            <TextBlock Text="{x:Bind Description}" TextWrapping="WrapWholeWords" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ctk:DataGrid.RowDetailsTemplate>
                            <ctk:DataGrid.Columns>
                                <ctk:DataGridTextColumn
                                    Binding="{Binding Title}"
                                    Header="Title"
                                    IsReadOnly="True"
                                    Tag="Title" />
                                <ctk:DataGridTemplateColumn
                                    CanUserSort="False"
                                    Header="Season"
                                    IsReadOnly="True"
                                    Tag="Season">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock Margin="10,0" VerticalAlignment="Center">
                                                <Run Text="{x:Bind Season.SeasonName}" />
                                                <Run Text="{x:Bind Season.Year}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn
                                    Header="Average"
                                    IsReadOnly="True"
                                    Tag="Mean Score">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind MeanScore}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn Header="Score" Tag="User Score">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind help:AnimeHelpers.UserScore(Tracking), Mode=OneWay}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                    <ctk:DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <uc:RatingPicker HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                             Anime="{x:Bind}"/>
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellEditingTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn
                                    MinWidth="173"
                                    CanUserSort="False"
                                    Header="Progress"
                                    IsReadOnly="True"
                                    Tag="Tracking">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <ctk:UniformGrid
                                                Margin="10,5"
                                                ColumnSpacing="10"
                                                Columns="3">
                                                <TextBlock VerticalAlignment="Center" Text="{x:Bind help:AnimeHelpers.Progress(Tracking, TotalEpisodes), Mode=OneWay}" />
                                                <Button Command="{x:Bind root:App.Commands.IncrementTracking}" CommandParameter="{x:Bind}">
                                                    <SymbolIcon Symbol="Add" />
                                                </Button>
                                                <Button Command="{x:Bind root:App.Commands.DecrementTracking}" CommandParameter="{x:Bind}">
                                                    <SymbolIcon Symbol="Remove" />
                                                </Button>
                                            </ctk:UniformGrid>
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn
                                    Header="Started"
                                    IsReadOnly="True"
                                    Tag="Date Started">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                Margin="10,0"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Tracking.StartDate, Converter={StaticResource HumanizeConverter}}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn
                                    Header="Completed"
                                    IsReadOnly="True"
                                    Tag="Date Completed">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                Margin="10,0"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Tracking.FinishDate, Converter={StaticResource HumanizeConverter}}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTemplateColumn
                                    Header="Last updated"
                                    IsReadOnly="True"
                                    Tag="Last Updated">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                Margin="10,0"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Tracking.UpdatedAt, Converter={StaticResource HumanizeConverter}}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                                <ctk:DataGridTextColumn
                                    Binding="{Binding Type}"
                                    Header="Type"
                                    IsReadOnly="True"
                                    Tag="Type" />
                                <ctk:DataGridTemplateColumn
                                    Header="Next episode"
                                    IsReadOnly="True"
                                    Tag="Next Episode">
                                    <ctk:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate x:DataType="cm:AnimeModel">
                                            <TextBlock
                                                Margin="10,0"
                                                VerticalAlignment="Center"
                                                Text="{x:Bind NextEpisodeAt, Converter={StaticResource HumanizeConverter}, Mode=OneWay, ConverterParameter=1}" />
                                        </DataTemplate>
                                    </ctk:DataGridTemplateColumn.CellTemplate>
                                </ctk:DataGridTemplateColumn>
                            </ctk:DataGrid.Columns>
                        </ctk:DataGrid>
                    </ctk:Case>
                </ctk:SwitchPresenter>

                <Grid Grid.Row="1">
                    <TeachingTip
                        x:Name="GenresTeachingTip"
                        PreferredPlacement="Bottom"
                        Target="{x:Bind GenresButton}">
                        <labs:TokenView
                            x:Name="GenresView"
                            IsWrapped="True"
                            ItemsSource="{x:Bind ViewModel.Genres, Mode=OneWay}"
                            SelectionChanged="TokenView_SelectionChanged"
                            SelectionMode="Multiple" />
                    </TeachingTip>
                    <TeachingTip
                        x:Name="QuickAddPopup"
                        Title="Quick Add"
                        Grid.Row="1"
                        Target="{x:Bind QuickAdd}">
                        <Grid Padding="3,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <AutoSuggestBox
                                PlaceholderText="Search"
                                QueryIcon="Find"
                                Text="{x:Bind ViewModel.QuickAddSearchText, Mode=TwoWay}" />

                            <ListView
                                x:Name="QuickAddResult"
                                Grid.Row="1"
                                Height="150"
                                Margin="{StaticResource SmallTopMargin}"
                                IsItemClickEnabled="True"
                                ItemsSource="{x:Bind ViewModel.QuickSearchResults, Mode=OneWay}"
                                SelectionMode="None">
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="cm:AnimeModel">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                Text="{x:Bind Title}"
                                                TextTrimming="CharacterEllipsis"
                                                ToolTipService.ToolTip="{x:Bind Title}" />
                                            <Button
                                                Grid.Column="1"
                                                Command="{x:Bind root:App.Commands.More}"
                                                CommandParameter="{x:Bind Id}">
                                                <SymbolIcon Symbol="More" />
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </TeachingTip>
                </Grid>

                <ctk:Loading
                    x:Name="LoadingControl"
                    Grid.Row="1"
                    IsLoading="{x:Bind ViewModel.IsLoading, Mode=TwoWay}">
                    <ProgressRing Margin="0,0,12,0" IsActive="True" />
                </ctk:Loading>

                <Grid Grid.Row="2" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <CommandBar
                        HorizontalAlignment="Left"
                        DefaultLabelPosition="Right"
                        IsDynamicOverflowEnabled="False">
                        <AppBarElementContainer Padding="10,7,0,7">
                            <AutoSuggestBox
                                Width="300"
                                VerticalAlignment="Center"
                                PlaceholderText="Title"
                                QueryIcon="Find"
                                Text="{x:Bind ViewModel.Filter.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </AppBarElementContainer>
                        <AppBarElementContainer Padding="10,7,7,7">
                            <TextBox PlaceholderText="Year" Text="{x:Bind ViewModel.Filter.Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </AppBarElementContainer>
                        <AppBarButton
                            x:Name="GenresButton"
                            Icon="Tag"
                            Label="Genres" />
                        <AppBarButton Icon="Filter" Label="Watching Status">
                            <AppBarButton.Flyout>
                                <MenuFlyout AreOpenCloseAnimationsEnabled="True">
                                    <RadioMenuFlyoutItem
                                        x:Name="WatchingFlyoutToggle"
                                        Command="{x:Bind ViewModel.ChangeCurrentViewCommand}"
                                        CommandParameter="{x:Bind cm:AnimeStatus.Watching}"
                                        Text="Watching" />
                                    <RadioMenuFlyoutItem
                                        x:Name="PtwFlyoutToggle"
                                        Command="{x:Bind ViewModel.ChangeCurrentViewCommand}"
                                        CommandParameter="{x:Bind cm:AnimeStatus.PlanToWatch}"
                                        Text="Plan to watch" />
                                    <RadioMenuFlyoutItem
                                        x:Name="OnHoldFlyoutToggle"
                                        Command="{x:Bind ViewModel.ChangeCurrentViewCommand}"
                                        CommandParameter="{x:Bind cm:AnimeStatus.OnHold}"
                                        Text="On Hold" />
                                    <RadioMenuFlyoutItem
                                        x:Name="CompletedFlyoutToggle"
                                        Command="{x:Bind ViewModel.ChangeCurrentViewCommand}"
                                        CommandParameter="{x:Bind cm:AnimeStatus.Completed}"
                                        Text="Completed" />
                                    <RadioMenuFlyoutItem
                                        x:Name="DroppedFlyoutToggle"
                                        Command="{x:Bind ViewModel.ChangeCurrentViewCommand}"
                                        CommandParameter="{x:Bind cm:AnimeStatus.Dropped}"
                                        Text="Dropped" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarButton Icon="Calendar" Label="Airing Status">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        IsChecked="True"
                                        Text="All" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        Tag="{x:Bind cm:AiringStatus.CurrentlyAiring}"
                                        Text="Currently airing" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        Tag="{x:Bind cm:AiringStatus.NotYetAired}"
                                        Text="Not yet aired" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        Tag="{x:Bind cm:AiringStatus.FinishedAiring}"
                                        Text="Finished airing" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>

                    <CommandBar
                        Grid.Column="1"
                        DefaultLabelPosition="Right"
                        IsDynamicOverflowEnabled="False">
                        <AppBarButton Label="Columns" Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(ViewModel.IsListView), Mode=OneWay}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE8B3;" />
                            </AppBarButton.Icon>
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[1].IsVisible, Mode=TwoWay}" Text="Season" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[2].IsVisible, Mode=TwoWay}" Text="Average Score" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[3].IsVisible, Mode=TwoWay}" Text="User Score" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[4].IsVisible, Mode=TwoWay}" Text="Tracking" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[5].IsVisible, Mode=TwoWay}" Text="Date Stared" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[6].IsVisible, Mode=TwoWay}" Text="Date Completed" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[7].IsVisible, Mode=TwoWay}" Text="Last Updated" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[8].IsVisible, Mode=TwoWay}" Text="Type" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.DataGridSettings.Columns[9].IsVisible, Mode=TwoWay}" Text="Next Episode" />
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem Click="OnSaveColumnWidths" Text="Save column widths" />
                                    <MenuFlyoutItem Command="{x:Bind ViewModel.ResetDataGridColumns}" Text="Reset columns" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarButton
                            x:Name="QuickAdd"
                            Icon="Add"
                            Label="Quick Add" />
                        <AppBarButton
                            Command="{x:Bind ViewModel.RefreshCommand}"
                            Icon="Refresh"
                            Label="Refresh" />
                        <AppBarButton Icon="View" Label="Display mode">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetDisplayMode}"
                                        CommandParameter="{x:Bind cm:DisplayMode.Grid}"
                                        Text="Grid view">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xf0e2;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetDisplayMode}"
                                        CommandParameter="{x:Bind cm:DisplayMode.List}"
                                        Text="List view">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xf0e4;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>

                </Grid>
            </Grid>
        </ctk:Case>
        <ctk:Case>
            <ctk:Case.Value>
                <x:Boolean>False</x:Boolean>
            </ctk:Case.Value>
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="30"
                    Text="Not connected to any Anime List service, Go to settings page to connect."
                    TextWrapping="Wrap">
                    <TextBlock.Foreground>
                        <SolidColorBrush Opacity="0.3" Color="White" />
                    </TextBlock.Foreground>
                </TextBlock>
            </Grid>
        </ctk:Case>

    </ctk:SwitchPresenter>
</v:UserListPageBase>
