<UserControl
    x:Class="Totoro.WinUI.Media.Flyleaf.FlyleafTransportControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:c="using:Totoro.Core.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:help="using:Totoro.WinUI.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Button
                x:Name="DynamicSkipIntroButton"
                Width="150"
                Height="50"
                Margin="10,30"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                VerticalContentAlignment="Center"
                Content="Skip"
                FontSize="20"
                FontWeight="Bold"
                Foreground="White"
                Visibility="{x:Bind help:Converters.BooleanToVisibility(IsSkipButtonVisible), Mode=OneWay}">
                <Button.Background>
                    <SolidColorBrush Opacity="0.5" Color="Black" />
                </Button.Background>
            </Button>
            <TextBlock
                Margin="0,0,0,50"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                FontSize="50"
                FontWeight="SemiBold"
                Foreground="White"
                Text="{x:Bind Player.Subtitles.SubsText, Mode=OneWay}"
                TextAlignment="Center"
                TextWrapping="Wrap"
                Visibility="{x:Bind help:Converters.StringToVisibility(Player.Subtitles.SubsText), Mode=OneWay}" />
        </Grid>

        <Grid
            x:Name="Bar"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:FieldModifier="public"
            Visibility="Collapsed">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation
                    From="0"
                    To="1.0"
                    Duration="0:0:1" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" Duration="0:0:1" />
            </animations:Implicit.HideAnimations>
            <Grid.Background>
                <SolidColorBrush Opacity="0.5" Color="Black" />
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="8,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <!--  Current Time | Slider | Remaining Time  -->
                <TextBlock
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="{x:Bind help:Converters.TicksToTime(Player.CurTime), Mode=OneWay}" />

                <Slider
                    x:Name="TimeSlider"
                    Grid.Column="1"
                    Margin="10,0,10,0"
                    VerticalAlignment="Center"
                    IsTabStop="False"
                    Maximum="{x:Bind help:Converters.TiksToSeconds(Player.Duration), Mode=OneWay}"
                    Value="{x:Bind help:Converters.TiksToSeconds(Player.CurTime), Mode=OneWay}" />

                <TextBlock
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind TimeRemaning(Player.CurTime, Player.Duration), Mode=OneWay}" />
            </Grid>

            <Grid Grid.Row="1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <CommandBar
                    DefaultLabelPosition="Collapsed"
                    FlowDirection="RightToLeft"
                    IsDynamicOverflowEnabled="False"
                    OverflowButtonVisibility="Collapsed">

                    <AppBarButton
                        x:Name="SkipForwardButton"
                        Click="SkipForwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3D;}"
                        IsTapEnabled="False"
                        Label="Seek forward">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="NextTrackButton"
                        Icon="Next"
                        IsTabStop="False"
                        Label="Next Episode"
                        Visibility="{x:Bind help:Converters.BooleanToVisibility(IsNextTrackButtonVisible), Mode=OneWay}">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right" Modifiers="Control" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="PlayPauseButton"
                        Command="{x:Bind Player.Commands.TogglePlayPause}"
                        IsEnabled="{x:Bind Player.CanPlay, Mode=OneWay}"
                        IsTabStop="False"
                        Label="Play/Pause">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space" />
                        </AppBarButton.KeyboardAccelerators>
                        <AppBarButton.Icon>
                            <SymbolIcon x:Name="PlayPauseSymbol" Symbol="Play" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="PreviousTrackButton"
                        Icon="Previous"
                        IsEnabled="{x:Bind IsPreviousTrackButtonVisible, Mode=OneWay}"
                        IsTabStop="False"
                        Label="Previous Episode">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left" Modifiers="Control" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="SkipBackwardButton"
                        Click="SkipBackwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3C;}"
                        IsTapEnabled="False"
                        Label="Seek backward">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>

                </CommandBar>

                <CommandBar
                    Grid.Column="1"
                    DefaultLabelPosition="Collapsed"
                    IsDynamicOverflowEnabled="True"
                    OverflowButtonVisibility="Auto">

                    <AppBarButton
                        x:Name="SkipIntroButton"
                        Icon="{ui:FontIcon Glyph=&#xec4f;}"
                        Label="Skip Intro" />

                    <AppBarButton
                        x:Name="SubmitTimeStampButton"
                        Icon="{ui:SymbolIcon Symbol=Clock}"
                        Label="Submit Timestamp" />

                    <AppBarSeparator />

                    <AppBarButton
                        x:Name="PiPButton"
                        Click="PiPButton_Click"
                        Label="Picture in Picture">
                        <AppBarButton.Icon>
                            <FontIcon x:Name="PiPFontIcon" Glyph="&#xEE49;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="FullWindowButton"
                        IsTabStop="False"
                        Label="Toggle Fullscreen">
                        <AppBarButton.Icon>
                            <SymbolIcon x:Name="FullWindowSymbol" Symbol="FullScreen" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton Icon="Volume" Label="Volume">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <Slider
                                    Width="100"
                                    IsTabStop="False"
                                    Maximum="{x:Bind Player.Config.Player.VolumeMax, Mode=OneWay}"
                                    Value="{x:Bind Player.Audio.Volume, Mode=TwoWay}" />
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="QualitiesButton"
                        Icon="{ui:FontIcon Glyph=&#xe93e;}"
                        Label="Resolution">
                        <AppBarButton.Flyout>
                            <MenuFlyout Placement="Top" />
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="PlaybackRateButton"
                        Icon="{ui:FontIcon Glyph=&#xEC58;}"
                        IsTabStop="False"
                        Label="Playback Rate">
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem
                                    Click="ToggleMenuFlyoutItem_Click"
                                    IsChecked="True"
                                    Tag="{x:Bind c:PlaybackRate.One}"
                                    Text="1x" />
                                <ToggleMenuFlyoutItem
                                    Click="ToggleMenuFlyoutItem_Click"
                                    Tag="{x:Bind c:PlaybackRate.OnePointTwoFive}"
                                    Text="1.25x" />
                                <ToggleMenuFlyoutItem
                                    Click="ToggleMenuFlyoutItem_Click"
                                    Tag="{x:Bind c:PlaybackRate.OnePointFive}"
                                    Text="1.5x" />
                                <ToggleMenuFlyoutItem
                                    Click="ToggleMenuFlyoutItem_Click"
                                    Tag="{x:Bind c:PlaybackRate.Two}"
                                    Text="2x" />
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton
                        x:Name="CCSelectionButton"
                        Icon="{ui:FontIcon Glyph=&#xED1E;}"
                        IsTabStop="False"
                        Label="Subtitles"
                        Visibility="{x:Bind help:Converters.BooleanToVisibility(IsCCSelectionVisible), Mode=OneWay}">
                        <AppBarButton.Flyout>
                            <MenuFlyout />
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="AddCcButton"
                        Icon="{ui:FontIcon Glyph=&#xed11;}"
                        IsTabStop="False"
                        Label="Add External Subtitles"
                        Visibility="{x:Bind help:Converters.BooleanToVisibility(IsAddCCButtonVisibile), Mode=OneWay}" />

                </CommandBar>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
